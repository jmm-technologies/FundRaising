@page "/events"
@inject HttpClient _httpClient
@code {
    public List<EventVM> EventsList { get; set; } = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            EventsList = await _httpClient.GetFromJsonAsync<List<EventVM>>(RaiseNow.Utils.StaticUtils.EVENTS_API);
            StateHasChanged();
        }
        //return base.OnAfterRenderAsync(firstRender);
    }
}
<!--page-title-area start-->
<section class="page-title-area d-flex justify-content-center align-items-center" style="background-image:url(assets/img/bg/campaignPageHeader.png);">
    <div class="container">
        <div class="row">
            <div class="col-xl-10 offset-xl-1">
                <div class=" text-center">
                    <h1 class="page-title  fw-600 f-45 wow fadeInUp2 animated text-buzz-in " data-wow-delay='.1s'>Events</h1>

                </div>
            </div>
        </div>
    </div>
</section>
<!--page-title-area area-->
<section class="events-area pt-130 pb-45">
    <div class="container">
        <h1 class='f-26 fw-500'>
            Showing All Events
        </h1>
        <div class="row mt-30 ">

            @if (EventsList != null)
            {
                @foreach (var item in EventsList)
                {
                    <div class="col-xl-6 col-lg-6 col-12">
                        <div class='custom-PrimaryCards '>
                            <img src="@item.photoId.path" class='w-100' alt="">
                            <h1 class='f-24 fw-500 mt-16px'>
                                @item.name
                            </h1>
                            <p class='mt-10px'>
                                @item.description
                            </p>
                        </div>
                    </div>
                }
            }

        </div>
    </div>
</section>